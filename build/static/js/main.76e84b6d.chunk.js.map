{"version":3,"sources":["ActionCreator/SignUpAction.js","Components/SignUp.js","Components/Home.js","Components/ConfirmUser.js","Components/LogIn.js","Components/FolderComp.js","Components/ChildFolder.js","App.js","serviceWorker.js","Reducer/SignUpReducer.js","Reducer/FolderReducer.js","Reducer/CombineReducer.js","store/Store.js","index.js"],"names":["OnChange_Value","onChange","type","payload","SignUp","props","handleChange","e","target","name","value","match","value_change","setState","errorFlag","handleSubmit","preventDefault","firstName","lastName","Email","phoneNumber","sessionStorage","setItem","history","push","console","log","state","Container","Row","className","Col","lg","this","Form","onSubmit","Group","controlId","Label","Control","maxLength","minLength","Button","variant","React","Component","mapDispatchToProps","connectToStore","connect","ownProps","SignUpReducer","Home","to","size","ConfirmUser","matchFlag","password","confirmPassword","readOnly","LogIn","storageEmail","getItem","storagePassword","User_Name","user_password","emailFlag","passWord","placeholder","addNewFolder","folder","folderArray","FolderReducer","useState","folderName","setFolderName","show","setShow","handleClose","folderlist","map","item","index","key","Badge","encodeURI","onClick","Modal","onHide","Header","closeButton","Title","Body","Footer","childfolderArray","parent","params","id","parentName","decodeURI","childfolderList","filter","App","exact","path","component","ChildFolder","FolderComp","Boolean","window","location","hostname","initialState","initFolderArray","sub","AllReducers","combineReducers","action","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.76e84b6d.chunk.js","sourcesContent":["export const OnChange_Value = (onChange) => {\r\n  return {\r\n    type: \"OnChange_Value\",\r\n    payload: onChange,\r\n  };\r\n};\r\n\r\nexport const ADD_NEW_FOLDER = (folder) => {\r\n  return {\r\n    type: \"ADD_NEW_FOLDER\",\r\n    payload: folder,\r\n  };\r\n};\r\n\r\nexport const ADD_CHILD_NEW_FOLDER = (folder) => {\r\n  return {\r\n    type: \"ADD_CHILD_NEW_FOLDER\",\r\n    payload: folder,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { OnChange_Value } from \"../ActionCreator/SignUpAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorFlag: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.name === \"phoneNumber\") {\r\n      if (!e.target.value.match(/^[0-9\\b]*$/)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    this.props.value_change({ name: e.target.name, value: e.target.value });\r\n    this.setState({\r\n      errorFlag: false,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      !this.props.firstName ||\r\n      !this.props.lastName ||\r\n      !this.props.Email ||\r\n      !this.props.phoneNumber\r\n    ) {\r\n      this.setState({\r\n        errorFlag: true,\r\n      });\r\n    }\r\n    if (\r\n      this.props.firstName &&\r\n      this.props.lastName &&\r\n      this.props.Email &&\r\n      this.props.phoneNumber\r\n    ) {\r\n      sessionStorage.setItem(\"User_name\", this.props.Email);\r\n      this.props.history.push(\"/credential\");\r\n      console.log(\"submitted\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col lg=\"3\">\r\n            <h6>\r\n              {this.state.errorFlag && (\r\n                <span>please fill up all the fields</span>\r\n              )}\r\n            </h6>\r\n            <h3>Sign Up step-1</h3>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>First Name:</Form.Label>\r\n                <Form.Control\r\n                  maxLength=\"20\"\r\n                  type=\"text\"\r\n                  value={this.props.firstName}\r\n                  name=\"firstName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Last Name:</Form.Label>\r\n                <Form.Control\r\n                  maxLength=\"20\"\r\n                  type=\"text\"\r\n                  value={this.props.lastName}\r\n                  name=\"lastName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email:</Form.Label>\r\n                <Form.Control\r\n                  maxLength=\"50\"\r\n                  type=\"email\"\r\n                  value={this.props.Email}\r\n                  name=\"Email\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Phone Number:</Form.Label>\r\n                <Form.Control\r\n                  minLength=\"10\"\r\n                  maxLength=\"10\"\r\n                  type=\"text\"\r\n                  value={this.props.phoneNumber}\r\n                  name=\"phoneNumber\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n// export default connect(SignUp);\r\n// connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(SignUp)\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  firstName: state.SignUpReducer.firstName,\r\n  lastName: state.SignUpReducer.lastName,\r\n  Email: state.SignUpReducer.Email,\r\n  phoneNumber: state.SignUpReducer.phoneNumber,\r\n  // ... computed data from state and optionally ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  value_change: OnChange_Value,\r\n};\r\n// `connect` returns a new function that accepts the component to wrap\r\nconst connectToStore = connect(mapStateToProps, mapDispatchToProps);\r\nexport default connectToStore(SignUp);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col lg=\"2\">\r\n          <Link to=\"/sign-up\">\r\n            <Button variant=\"primary\" size=\"lg\">\r\n              SignUp\r\n            </Button>\r\n          </Link>\r\n        </Col>\r\n        <Col lg=\"2\">\r\n          <Link to=\"/login\">\r\n            <Button variant=\"primary\" size=\"lg\">\r\n              LogIn\r\n            </Button>\r\n          </Link>\r\n        </Col>\r\n        <Col lg=\"2\">\r\n          <Link to=\"/folder\">\r\n            <Button variant=\"primary\" size=\"lg\">\r\n              Folder\r\n            </Button>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { OnChange_Value } from \"../ActionCreator/SignUpAction\";\r\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\r\nclass ConfirmUser extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      errorFlag: false,\r\n      matchFlag: false,\r\n    });\r\n    this.props.value_change({ name: e.target.name, value: e.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!this.props.password || !this.props.confirmPassword) {\r\n      console.log(\"got inside\");\r\n      this.setState({\r\n        errorFlag: true,\r\n      });\r\n    }\r\n    if (this.props.password !== this.props.confirmPassword) {\r\n      this.setState({\r\n        matchFlag: true,\r\n      });\r\n    }\r\n    if (!this.props.password || !this.props.confirmPassword) {\r\n      return false;\r\n    }\r\n    if (this.props.password === this.props.confirmPassword) {\r\n      sessionStorage.setItem(\"password\", this.props.confirmPassword);\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  };\r\n  render() {\r\n    console.log(this.props, \"ALL PROPS\");\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col lg=\"3\">\r\n            {this.state.errorFlag && <span>Please fill up all the fields</span>}\r\n            {this.state.matchFlag && (\r\n              <span>password and confirm password doesn't match</span>\r\n            )}\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>User Name:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={this.props.Email}\r\n                  name=\"firstName\"\r\n                  readOnly\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={this.props.password}\r\n                  name=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Confirm Password:</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={this.props.confirmPassword}\r\n                  name=\"confirmPassword\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  firstName: state.SignUpReducer.firstName,\r\n  lastName: state.SignUpReducer.lastName,\r\n  Email: state.SignUpReducer.Email,\r\n  phoneNumber: state.SignUpReducer.phoneNumber,\r\n  password: state.SignUpReducer.password,\r\n  confirmPassword: state.SignUpReducer.confirmPassword,\r\n  // ... computed data from state and optionally ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  value_change: OnChange_Value,\r\n};\r\nconst connectToStore = connect(mapStateToProps, mapDispatchToProps);\r\nexport default connectToStore(ConfirmUser);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { OnChange_Value } from \"../ActionCreator/SignUpAction\";\r\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\r\nclass LogIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorFlag: false,\r\n      emailFlag: false,\r\n      passWord: false,\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      errorFlag: false,\r\n      matchFlag: false,\r\n    });\r\n    this.props.value_change({ name: e.target.name, value: e.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let storageEmail = sessionStorage.getItem(\"User_name\");\r\n    let storagePassword = sessionStorage.getItem(\"password\");\r\n    if (!this.props.User_Name || !this.props.user_password) {\r\n      this.setState(\r\n        {\r\n          errorFlag: true,\r\n        },\r\n        () => {\r\n          console.log(this.state.errorFlag, \"ppppp\");\r\n        }\r\n      );\r\n    }\r\n    if (this.props.User_Name !== storageEmail) {\r\n      this.setState({\r\n        emailFlag: true,\r\n      });\r\n    }\r\n    if (this.props.user_password !== storagePassword) {\r\n      this.setState({\r\n        passWord: true,\r\n      });\r\n    }\r\n    this.props.history.push(\"/folder\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col lg=\"3\">\r\n            {this.state.errorFlag && <span>Please fill up all the fields</span>}\r\n            {this.state.emailFlag && <span>enter a valid user</span>}\r\n            {this.state.passWord && <h3>incorrect password</h3>}\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email id:</Form.Label>\r\n                <Form.Control\r\n                  maxLength=\"50\"\r\n                  type=\"email\"\r\n                  value={this.props.User_Name}\r\n                  name=\"User_Name\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Enter Email id\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control\r\n                  maxLength=\"50\"\r\n                  type=\"password\"\r\n                  value={this.props.user_password}\r\n                  name=\"user_password\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Enter password\"\r\n                />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  firstName: state.SignUpReducer.firstName,\r\n  lastName: state.SignUpReducer.lastName,\r\n  Email: state.SignUpReducer.Email,\r\n  phoneNumber: state.SignUpReducer.phoneNumber,\r\n  password: state.SignUpReducer.password,\r\n  confirmPassword: state.SignUpReducer.confirmPassword,\r\n  User_Name: state.SignUpReducer.User_Name,\r\n  user_password: state.SignUpReducer.user_password,\r\n  // ... computed data from state and optionally ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  value_change: OnChange_Value,\r\n};\r\nconst connectToStore = connect(mapStateToProps, mapDispatchToProps);\r\nexport default connectToStore(LogIn);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\nimport { ADD_NEW_FOLDER } from \"../ActionCreator/SignUpAction\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction FolderComp(props) {\r\n  const [folderName, setFolderName] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value, \"lll\");\r\n    setFolderName(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    props.addNewFolder(folderName);\r\n    setShow(false);\r\n    setFolderName(\"\");\r\n  };\r\n  //console.log(props, \"all props\");\r\n  const { folderArray } = props;\r\n  let folderlist = folderArray.map((item, index) => (\r\n    <Button variant=\"primary\" key={index}>\r\n      <Badge variant=\"light\">\r\n        <Link to={\"/folder/\" + encodeURI(item)}>{item}</Link>\r\n      </Badge>\r\n    </Button>\r\n  ));\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Create New Folder\r\n      </Button>\r\n      <ul>{folderlist}</ul>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"text\" value={folderName} onChange={handleChange} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  folderArray: state.FolderReducer.folderArray,\r\n});\r\nconst mapDispatchToProps = {\r\n  addNewFolder: ADD_NEW_FOLDER,\r\n};\r\nconst connectToStore = connect(mapStateToProps, mapDispatchToProps);\r\nexport default connectToStore(FolderComp);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\nimport { ADD_CHILD_NEW_FOLDER } from \"../ActionCreator/SignUpAction\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction ChildFolder(props) {\r\n  const [folderName, setFolderName] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value, \"lll\");\r\n    setFolderName(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    sessionStorage.setItem(\"selectedFolder\", props.match.params.id);\r\n    props.addNewFolder({\r\n      name: folderName,\r\n      parent: props.match.params.id,\r\n    });\r\n    setShow(false);\r\n    setFolderName(\"\");\r\n  };\r\n  console.log(props, \"all props\");\r\n  const { childfolderArray } = props;\r\n  const parent = props.match.params.id;\r\n  const parentName = decodeURI(props.match.params.id);\r\n\r\n  let childfolderList = childfolderArray\r\n    .filter((item) => item.parent === parent)\r\n    .map((item, index) => (\r\n      <Button variant=\"primary\" key={index}>\r\n        <Badge variant=\"light\">{item.name}</Badge>\r\n      </Button>\r\n    ));\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Create New Folder\r\n      </Button>\r\n      Parent: <Link to={\"/folder\"}>{parentName}</Link>\r\n      <ul>{childfolderList}</ul>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"text\" value={folderName} onChange={handleChange} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  childfolderArray: state.FolderReducer.childfolderArray,\r\n});\r\nconst mapDispatchToProps = {\r\n  addNewFolder: ADD_CHILD_NEW_FOLDER,\r\n};\r\nconst connectToStore = connect(mapStateToProps, mapDispatchToProps);\r\nexport default connectToStore(ChildFolder);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\nimport SignUp from \"./Components/SignUp\";\nimport Home from \"./Components/Home\";\nimport ConfirmUser from \"./Components/ConfirmUser\";\nimport LogIn from \"./Components/LogIn\";\nimport FolderComp from \"./Components/FolderComp\";\nimport ChildFolder from \"./Components/ChildFolder\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      // <div>\n      //   <SignUp />\n      // </div>\n\n      <Router>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/sign-up\" component={SignUp} />\n        <Route path=\"/credential\" component={ConfirmUser} />\n        <Route path=\"/login\" component={LogIn} />\n        <Route exact path=\"/folder/:id\" component={ChildFolder} />\n        <Route exact path=\"/folder\" component={FolderComp} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  Email: \"\",\r\n  phoneNumber: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n  User_Name: \"\",\r\n  user_password: \"\",\r\n};\r\n\r\nexport const SignUpReducer = (state = initialState, action) => {\r\n  console.log(action.payload, \"kkk\");\r\n  switch (action.type) {\r\n    case \"OnChange_Value\": {\r\n      state = { ...state, [action.payload.name]: action.payload.value };\r\n      return state;\r\n      break;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","let initialState = {\r\n  folderArray: [],\r\n  childfolderArray: [],\r\n  initFolderArray: [\r\n    { name: \"namrata\", sub: [{ name: \"namrata-1\", sub: [] }] },\r\n    {\r\n      name: \"sanjib\",\r\n      sub: [\r\n        { name: \"sanjib-1\", sub: [] },\r\n        { name: \"sanjib-2\", sub: [] },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const FolderReducer = (state = initialState, action) => {\r\n  console.log(action.payload, \"kkk\");\r\n  const { payload, type } = action;\r\n  switch (type) {\r\n    case \"ADD_NEW_FOLDER\": {\r\n      state = { ...state, folderArray: [...state.folderArray, payload] };\r\n      return state;\r\n    }\r\n    case \"ADD_CHILD_NEW_FOLDER\": {\r\n      state = {\r\n        ...state,\r\n        childfolderArray: [...state.childfolderArray, payload],\r\n      };\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { SignUpReducer } from \"./SignUpReducer\";\r\nimport { FolderReducer } from \"./FolderReducer\";\r\nexport const AllReducers = combineReducers({\r\n  SignUpReducer,\r\n  FolderReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { AllReducers } from \"../Reducer/CombineReducer\";\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware());\r\nconst store = createStore(AllReducers, enhancer);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/Store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}